@page "/students/view/{Id:int}"
@inject NavigationManager NavigationManager
@inject StudentService Service

@if (student == null)
{
    <p>Loading ....</p>
}
else
{
    <h3 class="mt-2 mb-2">Student</h3>
    <div class="card mt-4">    
        <h5 class="card-title text-center mt-3">@student.Name </h5>
        <div class="card-body">
            <ul class="list-group list-group-flush">
                <li class="list-group-item"><strong>Email: </strong> @student.Email</li>
                <li class="list-group-item"><strong>Course: </strong> @student.Course</li>
                <li class="list-group-item"><strong>Age: </strong> @student.Age</li>
            </ul>
        </div>
        <div class="card-footer mt-2 d-flex justify-content-around">
            <a href=@($"students/update/{student.Id}") class="btn btn-primary btn-sm mr-2" >Update</a>
            <a href=@($"students/delete/{student.Id}") class="btn btn-danger btn-sm  mr-2">Delete</a>  
            <a href=@($"students") class="btn btn-secondary btn-sm">Student List</a> 
        </div>
    </div> 
    <h3 class="mt-2 mb-2">Tickets</h3>
    <ul class="list-group"> 
        @foreach (var t in student.Tickets)
        {
            <li class="list-group-item">@t.Issue</li>
        }  
    </ul> 
}


@code {  
    [Parameter]  
    public int Id { get; set; }

    private StudentDto student; 

    protected override async Task OnInitializedAsync()
    {           
        student = await Service.GetStudent(Id);        
    } 

}