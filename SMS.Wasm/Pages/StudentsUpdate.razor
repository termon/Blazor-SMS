@page "/students/update/{Id:int}"
@inject NavigationManager NavigationManager
@inject StudentService Service
@inject IToastService ToastService

<h3 class="mt-4 mb-4">Update Student</h3>

@if(dto == null)
{    <p>Loading student...</p>
}
else
{
    <StudentForm dto="dto" OnSave="Save" OnCancel="Cancel"></StudentForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    public StudentDto dto { get; set; }

    protected override async Task OnInitializedAsync()
    {           
        dto = await Service.GetStudent(Id);         
    }

    private async Task Save()
    {
        // TODO - use union type here to allow a StudentDto or ErrorResponse result
        var s = await Service.UpdateStudent(dto); 
        if (s != null)
        {
            NavigationManager.NavigateTo("students");
            ToastService.ShowSuccess("Student updated successfully");
        }
        ToastService.ShowError("Problem updating student");
    }

    private void Cancel()
    {        
        NavigationManager.NavigateTo("students");
        ToastService.ShowInfo("Student update cancelled");
    }
}