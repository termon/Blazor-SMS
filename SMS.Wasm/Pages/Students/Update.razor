@page "/students/update/{Id:int}"
@inject NavigationManager NavigationManager
@inject StudentService Service
@inject IToastService ToastService

<h3 class="mt-4 mb-4">Update Student</h3>

@if(Student == null)
{    <p>Loading student...</p>
}
else
{
    <StudentForm Student="Student" OnSave="Save" OnCancel="Cancel"></StudentForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    public StudentDto Student { get; set; }

    protected override async Task OnInitializedAsync()
    {      
        var result = await Service.GetStudent(Id);  
        result.Match(
            s => Student = s,
            e => ToastService.ShowError(e.Message)
        );       
    }

    private async Task Save()
    {
        var result = await Service.UpdateStudent(Student); 
        result.Match(
            s => { 
                NavigationManager.NavigateTo("students");
                ToastService.ShowSuccess("Student updated successfully");
            },
            e => ToastService.ShowError(e.Message)
        );
    }

    private void Cancel()
    {        
        NavigationManager.NavigateTo("students");
        //ToastService.ShowInfo("Student update cancelled");
    }
}