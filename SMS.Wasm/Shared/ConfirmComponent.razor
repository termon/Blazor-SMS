
@if (ShowConfirmation)
{
    <div class="modal fade show d-block" id="blazorModal" tabindex="-1" role="dialog" aria-labelledby="blazorModalCenterTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="blazorModalCenterTitle">Confirm Delete</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"
                        @onclick="() => OnConfirmationChange(false)">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal"
                    @onclick="() => OnConfirmationChange(false)">Cancel</button>
                <button type="button" class="btn btn-danger" 
                    @onclick="() => OnConfirmationChange(true)">Delete</button>
            </div>
            </div>
        </div>
    </div>
}

@code {

    [Parameter]
    public EventCallback<bool> ConfirmationChanged { get; set; }
    
    protected bool ShowConfirmation { get; set;}

    public void Show()
    {
        ShowConfirmation = true;
        StateHasChanged();
    }

    public async Task OnConfirmationChange(bool value)
    {
        Console.WriteLine($"Dialog {value}");
        ShowConfirmation = false;
        await ConfirmationChanged.InvokeAsync(value);
    }
}